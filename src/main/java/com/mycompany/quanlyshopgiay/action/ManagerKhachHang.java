package com.mycompany.quanlyshopgiay.action;

import com.mycompany.quanlyshopgiay.entity.KhachHang;
import com.mycompany.quanlyshopgiay.entity.KhachHangXML;
import com.mycompany.quanlyshopgiay.utils.FileUtils;

import java.util.ArrayList;
import java.util.List;

/**
 * Qu·∫£n l√Ω kh√°ch h√†ng v√† h√≥a ƒë∆°n c·ªßa h·ªç, thao t√°c v·ªõi file "dataKhachHang.xml"
 */
public class ManagerKhachHang {
    private static final String FILE_NAME = "dataKhachHang.xml";
    private List<KhachHang> list;

    public List<KhachHang> read() {
        KhachHangXML wrapper = (KhachHangXML) FileUtils.readXMLFile(FILE_NAME, KhachHangXML.class);
        return (wrapper != null) ? wrapper.getDanhSachKhachHang() : new ArrayList<>();
    }

    public ManagerKhachHang() {
        list = read();  // ‚úÖ kh√¥ng c√≤n l·ªói g·∫°ch ch√¢n
        if (list == null) list = new ArrayList<>();
    }

    // Ghi danh s√°ch kh√°ch h√†ng (k√®m h√≥a ƒë∆°n) v√†o file XML
    public void write(List<KhachHang> list) {
        KhachHangXML wrapper = new KhachHangXML();
        wrapper.setDanhSachKhachHang(list);
        FileUtils.writeXMLtoFile(FILE_NAME, wrapper);
    }

    // T·∫°o m√£ kh√°ch h√†ng t·ª± ƒë·ªông: KH001, KH002,...
    public String generateNextCustomerID() {
        int max = 0;
        for (KhachHang kh : list) {
            try {
                String num = kh.getMaKhachHang().replace("KH", "");
                max = Math.max(max, Integer.parseInt(num));
            } catch (Exception e) {
                // B·ªè qua l·ªói ƒë·ªãnh d·∫°ng
            }
        }
        return String.format("KH%03d", max + 1);
    }

    // T·∫°o m√£ h√≥a ƒë∆°n m·ªõi duy nh·∫•t: HD001, HD002,...
    public String generateNextInvoiceID() {
        int max = 0;
        for (KhachHang kh : list) {
            if (kh.getDanhSachHoaDon() != null) {
                for (KhachHang.HoaDon hd : kh.getDanhSachHoaDon()) {
                    try {
                        String num = hd.getMaHD().replace("HD", "");
                        max = Math.max(max, Integer.parseInt(num));
                    } catch (Exception e) {
                        // B·ªè qua l·ªói ƒë·ªãnh d·∫°ng
                    }
                }
            }
        }
        return String.format("HD%03d", max + 1);
    }

    // Th√™m kh√°ch h√†ng m·ªõi
    public void addCustomer(KhachHang kh) {
        if (kh.getMaKhachHang() == null || kh.getMaKhachHang().isBlank()) {
            kh.setMaKhachHang(generateNextCustomerID());
        }
        if (kh.getDanhSachHoaDon() == null) {
            kh.setDanhSachHoaDon(new ArrayList<>());
        }
        list.add(kh);
        write(list);
        System.out.println("ƒê√£ th√™m KH: " + kh.getMaKhachHang());
    }


    // S·ª≠a th√¥ng tin kh√°ch h√†ng
    public void editCustomer(KhachHang kh) {
        for (int i = 0; i < list.size(); i++) {
            if (list.get(i).getMaKhachHang().equals(kh.getMaKhachHang())) {
                list.set(i, kh);
                write(list);
                break;
            }
        }
    }
    public void updateCustomer(KhachHang khMoi) {
        for (int i = 0; i < list.size(); i++) {
            if (list.get(i).getMaKhachHang().equals(khMoi.getMaKhachHang())) {
                list.set(i, khMoi);  // c·∫≠p nh·∫≠t to√†n b·ªô
                write(list);         // üî• GHI V√ÄO FILE
                break;
            }
        }
    }


    
    
    // X√≥a kh√°ch h√†ng kh·ªèi danh s√°ch
    public boolean deleteCustomer(KhachHang kh) {
        boolean removed = list.removeIf(x -> x.getMaKhachHang().equals(kh.getMaKhachHang()));
        if (removed) write(list);
        return removed;
    }
    

    // Th√™m h√≥a ƒë∆°n cho 1 kh√°ch h√†ng theo m√£ KH
    public boolean addInvoiceToCustomer(String maKH, KhachHang.HoaDon hoaDon) {
        for (KhachHang kh : list) {
            if (kh.getMaKhachHang().equals(maKH)) {
                if (kh.getDanhSachHoaDon() == null) {
                    kh.setDanhSachHoaDon(new ArrayList<>());
                }
                hoaDon.setMaHD(generateNextInvoiceID());
                kh.getDanhSachHoaDon().add(hoaDon);
                write(list);
                return true;
            }
        }
        return false;
    }

    // S·ª≠a h√≥a ƒë∆°n trong kh√°ch h√†ng
    public boolean editInvoice(KhachHang.HoaDon updatedHoaDon) {
        for (KhachHang kh : list) {
            List<KhachHang.HoaDon> hoaDons = kh.getDanhSachHoaDon();
            if (hoaDons != null) {
                for (int i = 0; i < hoaDons.size(); i++) {
                    if (hoaDons.get(i).getMaHD().equals(updatedHoaDon.getMaHD())) {
                        hoaDons.set(i, updatedHoaDon);
                        write(list);
                        return true;
                    }
                }
            }
        }
        return false;
    }

    // X√≥a h√≥a ƒë∆°n kh·ªèi 1 kh√°ch h√†ng
    public boolean deleteInvoice(String maHD) {
        for (KhachHang kh : list) {
            List<KhachHang.HoaDon> hoaDons = kh.getDanhSachHoaDon();
            if (hoaDons != null) {
                boolean removed = hoaDons.removeIf(hd -> hd.getMaHD().equals(maHD));
                if (removed) {
                    write(list);
                    return true;
                }
            }
        }
        return false;
    }

    // Tr·∫£ v·ªÅ danh s√°ch to√†n b·ªô kh√°ch h√†ng (c√≥ h√≥a ƒë∆°n b√™n trong)
    public List<KhachHang> getList() {
        return list;
    }

    // T√¨m kh√°ch h√†ng theo m√£
    public KhachHang findByID(String maKH) {
        for (KhachHang kh : list) {
            if (kh.getMaKhachHang().equalsIgnoreCase(maKH)) {
                return kh;
            }
        }
        return null;
    }
        // N·∫°p l·∫°i d·ªØ li·ªáu t·ª´ file XML v√†o list
    public void reload() {
        list = read();
    }

}
